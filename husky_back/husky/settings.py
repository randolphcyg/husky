"""
Django settings for husky project.

Generated by 'django-admin startproject' using Django 2.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

import pymysql

pymysql.install_as_MySQLdb()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, "apps"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0b()iifn-g85%x6s&%ey%%$tqjif18$c17^(7j&1x7-8cc)2pw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.user',            # 用户模块
    'apps.ad',              # AD域管理模块
    'rest_framework',       # restful
    # 'apps.api.apps.ApiConfig',    # restful
    'celery',
    'django_celery_beat',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'husky.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'husky.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',   # 数据库引擎
        'NAME': 'husky',                        # 数据库名
        'USER': 'root',                         # 用户名
        'PASSWORD': 'adqwe123',                 # 密码
        'HOST': '127.0.0.1',                    # mysql服务主机ip
        'PORT': '3306',                         # mysql服务端口
    },
    'srm': {                           # 远程数据库节点
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'agile_service',
        'USER': 'readonly',
        'PASSWORD': 'lp4c8nN7@@CNuqe9',
        'HOST': '192.168.120.170',
        'PORT': '3306',
    }
}

# redis缓存服务器
CACHES = {
    # 默认缓存库
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": "V%xw1xZqDK",   # 密码
        }
    },
    # 配置信息缓存库
    "configs_cache": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": "V%xw1xZqDK",   # 密码
        }
    },
    # AD域账号信息缓存库
    "ad_accounts_cache": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/2",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": "V%xw1xZqDK",   # 密码
        }
    }
}

# celery相关配置
# 配置celery时区，默认时UTC。
timezone = 'Asia/Shanghai'

# 任务队列的链接地址 celery配置redis作为broker
broker_url = 'redis://:V%xw1xZqDK@127.0.0.1:6379/3'

# 设置存储结果的后台 结果队列的链接地址
result_backend = 'redis://:V%xw1xZqDK@127.0.0.1:6379/4'

# 可接受的内容格式
accept_content = ["json"]
# 任务序列化数据格式
task_serializer = "json"
# 结果序列化数据格式
result_serializer = "json"

# 可选参数：给某个任务限流
# task_annotations = {'tasks.my_task': {'rate_limit': '10/s'}}

# 可选参数：给任务设置超时时间。超时立即中止worker
# task_time_limit = 10 * 60

# 可选参数：给任务设置软超时时间，超时抛出Exception
# task_soft_time_limit = 10 * 60

# 可选参数：如果使用django_celery_beat进行定时任务
beat_scheduler = "django_celery_beat.schedulers:DatabaseScheduler"

# 更多选项见
# https://docs.celeryproject.org/en/stable/userguide/configuration.html

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (BASE_DIR, 'static')

# 日志
LOGGING = {
    # version 值只能为1
    'version': 1,
    # True 表示禁用loggers
    'disable_existing_loggers': False,
    # < 格式化 >
    'formatters': {
        # 可以设置多种格式，根据需要选择保存的格式
        'simple': {
            'format': '%(levelname)s %(asctime)s pathname:%(pathname)s %(message)s'
        },
        'standard': {
            'format': '%(levelname)s %(asctime)s pathname:%(pathname)s function:%(funcName)s lineno:%(lineno)s %(message)s'
        }
    },
    'filters': {
    },
    # < 处理信息 >
    'handlers': {
        'debug_handlers': {
            'level': 'DEBUG',
            # 指定日志文件大小，若超过指定的文件大小，会再生成一个新的日志文件保存日志信息
            'class': 'logging.handlers.RotatingFileHandler',
            # 文件地址
            'filename': '%s/info.log' % BASE_DIR,
            # 指定保存格式
            'formatter': 'simple',
            'encoding': 'utf-8',
        },
        'info_handlers': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '%s/info.log' % BASE_DIR,
            'formatter': 'simple',
            'encoding': 'utf-8',
        },
        'warning_handlers': {
            'level': 'WARNING',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '%s/info.log' % BASE_DIR,
            'formatter': 'simple',
            'encoding': 'utf-8',
        },
        'error_handlers': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '%s/error.log' % BASE_DIR,
            'formatter': 'standard',
            'encoding': 'utf-8',
        },
    },
    'loggers': {
        'debug_logger': {
            'handlers': ['debug_handlers'],
            'level': 'DEBUG'
        },
        'info_logger': {
            'handlers': ['info_handlers'],
            'level': 'INFO'
        },
        'warning_logger': {
            'handlers': ['warning_handlers'],
            'level': 'WARNING'
        },
        'error_logger': {
            'handlers': ['error_handlers'],
            'level': 'ERROR'
        }
    }
}
